<div class="row">
  <h2 class="text-center text-primary well-lg">
    Create a Vivieu <%= link_to '#', data: { toggle: 'modal', target: '#edit-review-modal'} do %>
        <i class="fa fa-cogs" aria-hidden="true"></i>
    <% end %>
  </h2>
</div>
<br>
<div class="row">
  <%= simple_form_for [:reviewer, @review], validate: true do |f| %>
      <div class="col-sm-12 col-md-6">
        <div class="youtube-view">
          <% if @review.youtube_id.present? %>
              <%= render 'reviewer/reviews/shared/youtube_embed', review_id: @review.youtube_id, title: @review.title %>
          <% else %>
              <%= render 'reviewer/reviews/shared/add_youtube_video' %>
          <% end %>
        </div>
        <h3 class="text-default"><%= @review.title %></h3>
        <br>
        <%= f.input :title, as: :hidden %>
        <%= f.input :description, as: :bootsy, autofocus: true %>
        <%= f.input :tags %>
        <%= f.input :youtube_id, as: :hidden %>
        <hr>
        <h4 class="text-primary text-center">Amazon Product Details</h4>
        <%= f.input :asin, as: :hidden %>
        <%= f.input :amazon_product_title %>
        <%= f.input :amazon_product_description %>
        <hr>
      </div>
      <div class="col-sm-12 col-md-6">
      </div>
      <div class="row">
        <div class="col-sm-12">
          <%= f.button :submit %>
  <% end %>
  </div>
  </div>
</div>

<%= render 'reviewer/reviews/shared/youtube_videos' %>
<%= render 'reviewer/reviews/shared/edit_review_modal', review: @review %>

<script type="text/javascript" charset="utf-8">
  var tag_id = '<%= @review.category.id %>'
  populate_tags(tag_id);
  function populate_tags(tag_id){
    $.ajax({
      method: 'GET',
      data: tag_id,
      url: '/reviewer/tags/json_tags.json?id='+ tag_id,
      success: function(data){
        var tag_array = [];
        for(var i = 0; i < data.length; i++)
        {
          tag_array.push(data[i].title)
        }
        $('#review_tags').tokenfield({
          autocomplete: {
            source: tag_array,
            delay: 100
          },
          showAutocompleteOnFocus: false
        });
      }
    });
  }

  $('#review_tags').on('tokenfield:createtoken', function (event) {
    var existingTokens = $(this).tokenfield('getTokens');
    $.each(existingTokens, function(index, token) {
      if (token.value === event.attrs.value)
        event.preventDefault();
    });
  });

  <% unless @review.review_published? %>
  function submit_edit_form(form_id) {
    var form_info = '#edit_review_' + form_id;
    form_info = $(form_info);
    console.log(form_info);
    $.ajax({
      url: '/reviewer/reviews/'+form_id,
      type: 'PATCH',
      dataType: 'json',
      data: form_info.serialize(),
      success: function (data) {
        console.log(data);
      },
      error: function (xhr, err) {
        console.log(xhr.responseText);
      },
    });
    return false;
  }

  setInterval(function(){
    submit_edit_form(<%= @review.id %>)
  }, 5000);
<% end %>

</script>
